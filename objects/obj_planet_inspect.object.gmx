<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

with(obj_button)
    disabled = true
    
with(obj_planet)
    disabled = true

a = 0
a_speed = 2
room_to_go = -1
earth_inst = -1

loaded = true

planet_angle = 0
planet_index = 0

txt_inst = instance_create(200, 55, obj_text)
txt_inst.font = f_ubuntu_big
txt_inst_1 = instance_create(200, 300, obj_text)
btn_inst = instance_create(1700, 1000, obj_button)
btn_inst.txt_instance.text = "Inapoi"
btn_inst.width = 200
btn_inst.height = 100
btn_inst.border_width = 2
btn_inst.click = b_exit_view

planet_names[1] = "Mercur"
planet_names[2] = "Venus"
planet_names[3] = "Pamantul"
planet_names[4] = "Marte"
planet_names[5] = "Jupiter"
planet_names[6] = "Saturn"
planet_names[7] = "Uranus"
planet_names[8] = "Neptun"

planet_text[1] = "Mercur nu are sateliti naturali cunoscuti, find o planeta asemanatoare cu Luna,
care este in sine un satelit al Pamantului."

planet_text[2] = "Asemenea planetei Mercur, Venus nu are sateliti cunoscuti."

planet_text[3] = "Pamantul are un singur satelit natural, Luna.
Ea, invartindu-se in jurul Pamantului actioneaza asupra Pamantului cu o forta
care cauzeaza ridicarea apelor oceanelor, fenomen numit maree.

Aceasta este importanta pentru viata omului deoarece ajuta la generearea de
energie electrica, deoarece da inertie apei. Un alt impact este cel de generare
a eclipselor, atunci cand aceasta se pozitioneaza in fata soarelui."

planet_text[4] = "Marte are doar doi sateliti:

        Phobos si Deimos
        
denumite dupa fii zeului Roman Mars (dupa care planeta este numita).

Acestea au forma neregulata si o marime foarte mica."
planet_text[5] = "Jupiter are 79 de sateliti cunoscuti, cei mai importanti 4 fiind:

        Europa - find considerat un candidat pentru colonizare.
        
        Io - este considerat cel mai activ din punct de vedere vulcanic.
        
        Ganymede - este cea mai mare luna a lui Jupiter si a sistemului solar.
        
        Callisto - a doua cea mai mare luna, find la fel de mare ca Mercur."
planet_text[6] = "Saturn are 82 de luni confirmate care nu sunt pe inelele sale,
dintre care cele mai importante sunt:

        Mimas, Enceladus, Tethys, Dione, Rhea, Phoebe, Lapetus, Hyperion
        
        Titan - cea mai mare luna a lui Saturn, considerata pentru a fi colonizata."
planet_text[7] = "Uranus are 27 de luni cunoscute, ele find denumite dupa personaje din
lucrarile lui William Shakespeare si Alexander Pope.

Cele mai importante si mai mari luni ale lui Uranus sunt:
    
    Miranda, Ariel, Umbriel, Titania si Oberon.
    
Masa lunii Miranda, care este cea mai mica, este mai mare decat masa tuturor
celorlalte luni combinate."
planet_text[8] = "Neptun are 14 luni cunoscute, denumite dupa zei grecesti ale apei.

Cele mai importante dintre acestea sunt:
    Triton, Nereid, Neso, Proteus, Larissa, Naiad, Thalassa, Desipa si Galatea.
    
Traiectoria lui Triton arata ca ea nu a fost formata ca si celelalte luni, ci a fost
capturata de atractia gravitationala a lui Neptun, find singurul satelit natural
de acest tip."

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy

with(obj_button)
    disabled = false
    
with(obj_planet)
    disabled = false
    
with(txt_inst)
    instance_destroy()
    
with(txt_inst_1)
    instance_destroy()
    
with(btn_inst)
    instance_destroy()

if(earth_inst != -1)
    with(earth_inst)
        instance_destroy()
    
var inst = instance_create(0, 0, obj_transition_in);
inst.a_speed = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step

a += adelta_time * a_speed
planet_angle += 20 * adelta_time

if(a &gt; 1)
    if(!loaded)
    {
        loaded = true
    }

txt_inst.text = planet_names[planet_index]
txt_inst_1.text = planet_text[planet_index]
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

draw_set_alpha(a)

draw_set_color(make_color_rgb(28, 28, 36))

draw_rectangle(0, 0, room_width, room_height, false)

draw_set_color(make_color_rgb(255, 255, 255))

draw_set_alpha(1)

if(planet_index != 3)
    draw_sprite_ext(spr_solarsystem, planet_index, 100, 100, 0.3, 0.3, planet_angle, c_white, 1)
else if(earth_inst == -1)
{
    earth_inst = instance_create(100, 100, obj_earth)
    earth_inst.image_xscale = 0.3
    earth_inst.image_yscale = 0.3
}
    
with(txt_inst)
    event_perform(ev_draw, 0)
    
with(txt_inst_1)
    event_perform(ev_draw, 0)
    
with(btn_inst)
    event_perform(ev_draw, 0)
    
if(earth_inst != -1)
    with(earth_inst)
        event_perform(ev_draw, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
